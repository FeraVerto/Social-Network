{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","background","userAvatar","src","photos","large","alt","userInfo","userName","fullName","listInfo","lookingForAJob","Preloader","Post","item","itemLike","like","itemPost","message","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","reverse","map","m","likesCount","id","postsBlock","AddPostFormRadux","onSubmit","values","addPost","newPostText","reduxForm","form","postsBlockAdd","handleSubmit","postsBlock1","Field","component","Textarea","name","placeholder","validate","required","postsBlock2","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","mainContent","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.50b61857.chunk.js","sourcesContent":[" import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n export const withAuthRedirect = (Component) => {\n\n     class RedirectComponent extends React.Component {\n         render() {\n             if(!this.props.isAuth) return <Redirect to='/login' />\n\n             return <Component {...this.props} />\n         }\n     }\n\n     \n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n     return ConnectedAuthRedirectComponent;\n }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__3XrV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ProfileInfo_background__1tAwH\",\"userName\":\"ProfileInfo_userName__2XnM7\",\"userAvatar\":\"ProfileInfo_userAvatar__qlIFO\",\"userInfo\":\"ProfileInfo_userInfo__3hlxg\",\"listInfo\":\"ProfileInfo_listInfo__2LNML\",\"profileInfoContacts\":\"ProfileInfo_profileInfoContacts__3fU1C\",\"userContact\":\"ProfileInfo_userContact__17UaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\",\"postsBlock2\":\"MyPosts_postsBlock2__2k2pC\",\"postsBlock1\":\"MyPosts_postsBlock1__3UVd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"itemPost\":\"Post_itemPost__hn1tP\",\"itemLike\":\"Post_itemLike__3zHlN\",\"like\":\"Post_like__oViQh\"};","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={this.activateEditMode}>{\n                            this.props.status || 'No status'}\n                        </span>\n                    </div>\n                }\n\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange}\n                            autoFocus={true}\n                            onBlur={this.deactivateEditMode}\n                            value={this.state.status}></input>\n                    </div>\n                }\n            </div>)\n    }\n}\n\nexport default ProfileStatus;\n\n","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    //Значение false хранится где-то на стороне реакта\n    //useState возвращает массив и в нем сидят 2 элемента: \n    //значения и колбэк функция, которая эти значения устанавливает\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n   const  onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{\n                        props.status || 'No status'}\n                    </span>\n                </div>\n            }\n\n            {editMode &&\n                <div>\n                    <input autoFocus={true}\n                            onBlur={deactivateEditMode}\n                            onChange={onStatusChange}\n                            value={status}>\n                    </input>\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;\n\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n\n    if (!profile) {\n        return <Preloader />\n    }\n    return (\n        <div className={s.background}>\n            <div className={s.userAvatar}>\n                <img src={profile.photos.large} alt=\"Freddy\"></img>\n            </div>\n            <div className={s.userInfo}>\n                <span className={s.userName}>{profile.fullName}</span>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n                <ul className={s.listInfo}>\n                    <li>Date of Brith: 2 january</li>\n                    <li>City: Springwood</li>\n                    <li>Job: {profile.lookingForAJob}</li>\n                </ul>\n            </div>\n            {/* <div className={s.userContact}>{profile.website}\n                <ul className={s.profileInfoContacts}>\n                    <li><a href={profile.contacts.facebook}>FB</a></li>\n                    <li><a href={profile.contacts.website}>Web</a></li>\n                    <li><a href={profile.contacts.vk}>VK</a></li>\n                    <li><a href={profile.contacts.twitter}>TW</a></li>\n                    <li><a href={profile.contacts.instagram}>INST</a></li>\n                    <li><a href={profile.contacts.youtube}>YB</a></li>\n                    <li><a href={profile.contacts.github}>GH</a></li>\n                </ul>\n            </div> */}\n        </div>\n    )\n}\n\nexport default ProfileInfo;\n\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <li className={s.item}>\n            <div className={s.itemLike}>\n                <img src=\"https://lamcdn.net/furfurmag.ru/post-cover/PYMgsmfOiI0s9C3k8dwZ8Q-default.jpg\" alt=\"Аватарка Фредди\" />\n                <span className={s.like}>Like {props.like}</span>\n            </div>\n            <div className={s.itemPost}>\n                {props.message}\n            </div>\n            \n        </li>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo( props => {\n\n    let postsElements = [...props.posts].reverse().map(m => <Post message={m.message} like={m.likesCount} id={m.id} />)\n    let addNewPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddPostFormRadux onSubmit={addNewPost} />\n            <ul className={s.posts}>\n                {postsElements}\n            </ul>\n        </div>\n    );\n})\n    \n\nconst AddPostsForm = (props) => {\n    return (\n        <form className={s.postsBlockAdd} onSubmit={props.handleSubmit}>\n            <div className={s.postsBlock1}>\n                <Field component={Textarea}\n                    name='newPostText'\n                    placeholder='Hi, how are you sleep?'\n                    validate={[required, maxLength10]} />\n            </div>\n            <div className={s.postsBlock2}>\n                <button> Add post </button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostFormRadux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddPostsForm);\n\nexport default MyPosts;","import React from 'react';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText \n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\n\nconst Profile = (props) => {\n    return (\n        <main className={s.mainContent}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/> \n            <MyPostsContainer />\n        </main>\n    )\n}\n\nexport default Profile;\n\n","import React from 'react';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                //Не самое лучшее решение, но по-быструхе можно так сделать\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n\n        return <Profile {...this.props}\n                    profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateStatus} />\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps,\n        { getUserProfile, getStatus, updateStatus }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}