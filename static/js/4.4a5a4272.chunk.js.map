{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialog","active","linkDialog","id","avatar","src","photo","alt","dialogName","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","messageAdd","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","button","Dialogs","dialogs","dialogsPage","map","d","key","messages","m","dialogsItems","values","addMessage","newMessageText","compose","dispatch","sendMessageActionCreator"],"mappings":"sNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAIC,KAAKC,MAAMN,OAER,kBAACG,EAAcE,KAAKC,OAFG,kBAAC,IAAD,CAAUC,GAAG,eAJR,GAEXC,IAAML,WAYtC,OAFoCM,YAAQX,EAARW,CAAoCL,K,oBCnB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,QAAU,yBAAyB,OAAS,0B,oBCA7PD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,2BAA2B,SAAW,6BAA6B,OAAS,2BAA2B,WAAa,+BAA+B,WAAa,iC,oBCArQD,EAAOC,QAAU,CAAC,QAAU,2B,iHCgBbC,EAbI,SAACN,GAEhB,OACI,yBAAKO,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASH,UAAWC,IAAEG,WAAYV,GAAI,YAAcD,EAAMY,IACtD,yBAAKL,UAAWC,IAAEK,OAAQC,IAAKd,EAAMe,MAAOC,IAAI,KAChD,yBAAKT,UAAWC,IAAES,YAAajB,EAAMkB,S,kBCAtCC,EANC,SAACnB,GACb,OACI,yBAAKO,UAAWC,IAAEY,SAAUpB,EAAMoB,U,kCCGpCC,EAAeC,YAAiB,KAyChCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAhBL,SAACxB,GACpB,OACI,0BAAMO,UAAWC,IAAEkB,WAAYC,SAAU3B,EAAM4B,cAC3C,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACVb,KAAK,iBACLc,YAAY,qBACZC,SAAU,CAACC,IAAUb,MAEjC,6BACI,4BAAQd,UAAWC,IAAE2B,QAArB,eAUDC,EA3CC,SAACpC,GACb,IAAIqC,EAAUrC,EAAMsC,YAAYD,QAAQE,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMN,GAAI4B,EAAE5B,GAAI6B,IAAKD,EAAE5B,GAAIG,MAAOyB,EAAEzB,WACrG2B,EAAW1C,EAAMsC,YAAYI,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASqB,IAAKE,EAAE/B,GAAIA,GAAI+B,EAAE/B,QAOjG,OACI,yBAAKL,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEoC,cACbP,GAEL,yBAAK9B,UAAWC,IAAEkC,UACd,6BAAMA,GACN,kBAACnB,EAAD,CAAqBI,SAXb,SAACkB,GACjB7C,EAAM8C,WAAWD,EAAOE,sB,wBCSjBC,sBACX7C,aAlBkB,SAACV,GACnB,MAAO,CACH6C,YAAa7C,EAAM6C,YACnBS,eAAgBtD,EAAM6C,YAAYS,mBAIjB,SAACE,GAEtB,MAAO,CACHH,WAAY,SAACC,GACTE,EAASC,YAAyBH,SAQ1CnD,IAFWoD,CAGbZ","file":"static/js/4.4a5a4272.chunk.js","sourcesContent":[" import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n export const withAuthRedirect = (Component) => {\n\n     class RedirectComponent extends React.Component {\n         render() {\n             if(!this.props.isAuth) return <Redirect to='/login' />\n\n             return <Component {...this.props} />\n         }\n     }\n\n     \n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n     return ConnectedAuthRedirectComponent;\n }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"messageAdd\":\"Dialogs_messageAdd__1Zkw-\",\"addText\":\"Dialogs_addText__3PRlg\",\"button\":\"Dialogs_button__UnW0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__3-Pix\",\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\",\"messages\":\"DialogItem_messages__2H-vw\",\"avatar\":\"DialogItem_avatar__12OzI\",\"linkDialog\":\"DialogItem_linkDialog__3NpUZ\",\"dialogName\":\"DialogItem_dialogName__26ej3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React from 'react';\nimport s from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink className={s.linkDialog} to={\"/dialogs/\" + props.id}>\n                <img className={s.avatar} src={props.photo} alt=\"\"/>\n                <div className={s.dialogName}>{props.name}</div>\n             </NavLink>\n         \n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './Message.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst Dialogs = (props) => {\n    let dialogs = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} photo={d.photo} />);\n    let messages = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />);\n\n    \n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageText);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogs}\n            </div>\n            <div className={s.messages}>\n                <div>{messages}</div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\n\nconst AddMessageForm = (props) => {\n    return (\n        <form className={s.messageAdd} onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} \n                        name='newMessageText' \n                        placeholder='Enter your message'\n                        validate={[required, maxLength100]} />\n            </div>\n            <div>\n                <button className={s.button}> Send </button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\n\n\n\nexport default Dialogs;\n","import React from 'react';\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        newMessageText: state.dialogsPage.newMessageText,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    \n    return {\n        addMessage: (newMessageText) => {\n            dispatch(sendMessageActionCreator(newMessageText));\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}