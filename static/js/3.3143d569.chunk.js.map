{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","userInfo","userName","createField","Input","listInfo","type","Textarea","userContact","website","profileInfoContacts","Object","keys","contacts","map","key","contact","ProfileData","profileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","profileInfoContact","ProfileInfo","isOwner","savePhoto","saveProfile","Preloader","background","userAvatar","src","photos","large","userPhoto","alt","userAvatarAdd","target","files","length","onClick","initialValues","formData","then","Post","item","itemLike","like","itemPost","message","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","reverse","m","id","likesCount","postsBlock","AddPostFormRadux","values","addPost","newPostText","postsBlockAdd","postsBlock1","Field","component","name","placeholder","validate","required","postsBlock2","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","mainContent","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"sNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAIC,KAAKC,MAAMN,OAER,kBAACG,EAAcE,KAAKC,OAFG,kBAAC,IAAD,CAAUC,GAAG,eAJR,GAEXC,IAAML,WAYtC,OAFoCM,YAAQX,EAARW,CAAoCL,K,oBCnB7EM,EAAOC,QAAU,CAAC,WAAa,gCAAgC,YAAc,iCAAiC,SAAW,8BAA8B,WAAa,gCAAgC,SAAW,8BAA8B,oBAAsB,yCAAyC,mBAAqB,wCAAwC,cAAgB,mCAAmC,KAAO,0BAA0B,YAAc,mC,oBCA3cD,EAAOC,QAAU,CAAC,YAAc,+B,oBCAhCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,YAAc,6BAA6B,YAAc,+B,oBCAnJD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,uBAAuB,KAAO,qB,wJCkDxGC,EAjDgB,SAACN,GAAW,IAAD,EAERO,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASP,EAAMU,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAQtCC,qBAAW,WACPD,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAeV,OACI,8BACMF,GACE,6BACI,0BAAMK,cAjBG,WACrBJ,GAAY,KAiBKT,EAAMU,QAAU,cAK5BF,GACG,6BACI,2BAAOM,WAAW,EACVC,OAtBG,WACvBN,GAAY,GACZT,EAAMgB,aAAaN,IAqBCO,SAlBD,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAkBNA,MAAOV,O,mCCIpBW,EAHkBC,YAAU,CAACC,KAAM,gBAAjBD,EAtCT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC7C,OAAO,0BAAMC,SAAUH,GAElBE,GAAS,yBAAKE,UAAWC,IAAEC,kBAAlB,IAAsCJ,EAAtC,KACV,yBAAKE,UAAWC,IAAEN,MACd,yBAAKK,UAAWC,IAAEE,UACd,0BAAMH,UAAWC,IAAEG,UAAnB,IAA+BC,YAAY,YAAa,WAAY,GAAIC,MAExE,wBAAIN,UAAWC,IAAEM,UACb,4BACI,kDADJ,IACgCF,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAACE,KAAM,cAEpF,4BACI,uDADJ,IAEsBH,YAAY,yBAA0B,4BAA6B,GAAII,MAE7F,4BACI,wCACCJ,YAAY,WAAY,UAAW,GAAII,QAIpD,yBAAKT,UAAWC,IAAES,aAAcb,EAAQc,QACpC,wBAAIX,UAAWC,IAAEW,qBACZC,OAAOC,KAAKjB,EAAQkB,UAAUC,KAAI,SAAAC,GAC/B,OAAO,yBAAKjB,UAAWC,IAAEiB,SACrB,2BAAID,EAAKZ,YAAYY,EAAK,YAAcA,EAAK,GAAIX,KAAjD,YAMpB,6BACI,6CCYNa,EAAc,SAAC,GAAqC,IAApCtB,EAAmC,EAAnCA,QAASf,EAA0B,EAA1BA,OAAQM,EAAkB,EAAlBA,aACnC,OAAO,yBAAKY,UAAWC,IAAEmB,aACrB,0BAAMpB,UAAWC,IAAEG,UAAWP,EAAQwB,UACtC,kBAAC,EAAD,CAAwBvC,OAAQA,EAAQM,aAAcA,IAEtD,yBAAKY,UAAWC,IAAEE,UACd,wBAAIH,UAAWC,IAAEM,UACb,4BACI,kDAA2BV,EAAQyB,eAAiB,MAAQ,MAEhE,4BACKzB,EAAQyB,gBACT,6BAAK,uDAAL,IAAsCzB,EAAQ0B,4BAElD,4BACI,wCADJ,IACsB1B,EAAQ2B,WAItC,yBAAKxB,UAAWC,IAAES,aAAcb,EAAQc,QACpC,wBAAIX,UAAWC,IAAEW,qBACZC,OAAOC,KAAKjB,EAAQkB,UAAUC,KAAI,SAAAC,GAC/B,OAAO,kBAAC,EAAD,CAASA,IAAKA,EAAKQ,aAAcR,EAAKS,aAAc7B,EAAQkB,SAASE,YAQnFU,EAAU,SAAC,GAAiC,EAAhCF,aAAgC,EAAlBC,aACnC,OAAO,wBAAI1B,UAAWC,IAAE2B,oBAAoB,4BAArC,OAIIC,EA7EK,SAAC,GAAsE,IAArEhC,EAAoE,EAApEA,QAASiC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,YAAalD,EAA0B,EAA1BA,OAAQM,EAAkB,EAAlBA,aAAkB,EACxDT,oBAAS,GAD+C,mBACjFC,EADiF,KACvEC,EADuE,KAGtF,IAAKgB,EACD,OAAO,kBAACoC,EAAA,EAAD,MAiBX,OACI,yBAAKjC,UAAWC,IAAEiC,YACd,yBAAKlC,UAAWC,IAAEkC,YACd,yBAAKC,IAAKvC,EAAQwC,OAAOC,OAASC,IAAWC,IAAI,WAChDV,GAAW,2CAAgB,2BAAO9B,UAAWC,IAAEwC,cAAejC,KAAK,OAAOnB,SAlB3D,SAACC,GACrBA,EAAEoD,OAAOC,MAAMC,QACfb,EAAUzC,EAAEoD,OAAOC,MAAM,OAgBT,KACXb,GAAW,6BACR,4BAAQe,QAAS,WACbhE,GAAY,KADhB,UAOPD,EACG,kBAAC,EAAD,CAAiBkE,cAAejD,EAASA,QAASA,EAASE,SAtBtD,SAACgD,GACdf,EAAYe,GAAUC,MAClB,WACInE,GAAY,OAmBmEiD,QAASA,IACtF,kBAAC,EAAD,CAAahD,OAAQA,EAAQM,aAAcA,EAAcS,QAASA,M,oDC1BrEoD,EAfF,SAAC7E,GACV,OACI,wBAAI4B,UAAWC,IAAEiD,MACb,yBAAKlD,UAAWC,IAAEkD,UACd,yBAAKf,IAAI,gFAAgFI,IAAI,0FAC7F,0BAAMxC,UAAWC,IAAEmD,MAAnB,QAA+BhF,EAAMgF,OAEzC,yBAAKpD,UAAWC,IAAEoD,UACbjF,EAAMkF,W,gBCJjBC,EAAcC,YAAiB,IAE/BC,EAAUnF,IAAMoF,MAAM,SAAAtF,GAExB,IAAIuF,EAAgB,YAAIvF,EAAMwF,OAAOC,UAAU7C,KAAI,SAAA8C,GAAC,OAAI,kBAAC,EAAD,CAAM7C,IAAK7C,EAAM2F,GAAIT,QAASQ,EAAER,QAASF,KAAMU,EAAEE,WAAYD,GAAID,EAAEC,QAK3H,OACI,yBAAK/D,UAAWC,IAAEgE,YACd,wCACA,kBAACC,EAAD,CAAkBnE,SAPT,SAACoE,GACd/F,EAAMgG,QAAQD,EAAOE,gBAOjB,wBAAIrE,UAAWC,IAAE2D,OACZD,OAuBXO,EAAmBxE,YAAU,CAAEC,KAAM,yBAAlBD,EAhBJ,SAACtB,GAClB,OACI,0BAAM4B,UAAWC,IAAEqE,cAAevE,SAAU3B,EAAMwB,cAC9C,yBAAKI,UAAWC,IAAEsE,aACd,kBAACC,EAAA,EAAD,CAAOC,UAAWhE,IACdiE,KAAK,cACLC,YAAY,yBACZC,SAAU,CAACC,IAAUtB,MAE7B,yBAAKvD,UAAWC,IAAE6E,aACd,mDAQDrB,I,QCpBAsB,EAFUxG,aAjBH,SAACV,GAEnB,MAAO,CACH+F,MAAO/F,EAAMmH,YAAYpB,MACzBS,YAAaxG,EAAMmH,YAAYX,gBAId,SAACY,GAEtB,MAAO,CACHb,QAAS,SAACC,GACNY,EAASC,YAAqBb,QAKjB9F,CAA6CkF,GCJvD0B,EAdC,SAAC/G,GACb,OACI,0BAAM4B,UAAWC,IAAEmF,aACf,kBAAC,EAAD,CAAarD,UAAW3D,EAAM2D,UAC1BD,QAAS1D,EAAM0D,QACfjC,QAASzB,EAAMyB,QACff,OAAQV,EAAMU,OACdM,aAAchB,EAAMgB,aACpB4C,YAAa5D,EAAM4D,cACvB,kBAAC,EAAD,Q,wBCPNqD,E,yLAGE,IAAIC,EAASnH,KAAKC,MAAMmH,MAAMC,OAAOF,OAChCA,IACDA,EAASnH,KAAKC,MAAMqH,mBAGhBtH,KAAKC,MAAMsH,QAAQC,KAAK,UAGhCxH,KAAKC,MAAMwH,eAAeN,GAC1BnH,KAAKC,MAAMyH,UAAUP,K,0CAIrBnH,KAAK2H,mB,yCAGUC,GACX5H,KAAKC,MAAMmH,MAAMC,OAAOF,QAAUS,EAAUR,MAAMC,OAAOF,QACzDnH,KAAK2H,mB,+BAMT,OAAO,kBAAC,EAAD,iBAAa3H,KAAKC,MAAlB,CACH0D,SAAU3D,KAAKC,MAAMmH,MAAMC,OAAOF,OAClCzF,QAAS1B,KAAKC,MAAMyB,QACpBf,OAAQX,KAAKC,MAAMU,OACnBM,aAAcjB,KAAKC,MAAMgB,aACzB2C,UAAW5D,KAAKC,MAAM2D,iB,GAhCHzD,IAAML,WA2CtB+H,sBACXzH,aARkB,SAACV,GAAD,MAAY,CAC9BgC,QAAShC,EAAMmH,YAAYnF,QAC3Bf,OAAQjB,EAAMmH,YAAYlG,OAC1B2G,iBAAkB5H,EAAME,KAAKuH,OAC7BxH,OAAQD,EAAME,KAAKD,UAKf,CAAE8H,mBAAgBC,cAAWzG,iBAAc2C,cAAWC,kBAC1DiE,IACAjI,IAJWgI,CAKbX","file":"static/js/3.3143d569.chunk.js","sourcesContent":[" import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n export const withAuthRedirect = (Component) => {\n\n     class RedirectComponent extends React.Component {\n         render() {\n             if(!this.props.isAuth) return <Redirect to='/login' />\n\n             return <Component {...this.props} />\n         }\n     }\n\n     \n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n     return ConnectedAuthRedirectComponent;\n }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ProfileInfo_background__1tAwH\",\"profileData\":\"ProfileInfo_profileData__18agI\",\"userName\":\"ProfileInfo_userName__2XnM7\",\"userAvatar\":\"ProfileInfo_userAvatar__qlIFO\",\"listInfo\":\"ProfileInfo_listInfo__2LNML\",\"profileInfoContacts\":\"ProfileInfo_profileInfoContacts__3fU1C\",\"profileInfoContact\":\"ProfileInfo_profileInfoContact__23_SU\",\"userAvatarAdd\":\"ProfileInfo_userAvatarAdd__2KGFo\",\"form\":\"ProfileInfo_form__2Qdm7\",\"userContact\":\"ProfileInfo_userContact__17UaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__3XrV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\",\"postsBlock2\":\"MyPosts_postsBlock2__2k2pC\",\"postsBlock1\":\"MyPosts_postsBlock1__3UVd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"itemPost\":\"Post_itemPost__hn1tP\",\"itemLike\":\"Post_itemLike__3zHlN\",\"like\":\"Post_like__oViQh\"};","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    //Значение false хранится где-то на стороне реакта\n    //useState возвращает массив и в нем сидят 2 элемента: \n    //значения и колбэк функция, которая эти значения устанавливает\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n   const  onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>\n                        {props.status || 'No status'}\n                    </span>\n                </div>\n            }\n\n            {editMode &&\n                <div>\n                    <input autoFocus={true}\n                            onBlur={deactivateEditMode}\n                            onChange={onStatusChange}\n                            value={status}>\n                    </input>\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;\n\n","import React from 'react';\nimport {reduxForm} from 'redux-form';\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return <form onSubmit={handleSubmit}>\n\n        {error && <div className={s.formSummaryError}> {error} </div>}\n        <div className={s.form}>\n            <div className={s.userInfo}>\n                <span className={s.userName}> {createField('Full name', 'fullName', [], Input)}</span>\n\n                <ul className={s.listInfo}>\n                    <li>\n                        <b>Looking for a job: </b> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\n                    </li>\n                    <li>\n                        <b>My professional\n                            skills: </b> {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\n                    </li>\n                    <li>\n                        <b>About me:</b>\n                        {createField('About me', 'aboutMe', [], Textarea)}\n                    </li>\n                </ul>\n            </div>\n            <div className={s.userContact}>{profile.website}\n                <ul className={s.profileInfoContacts}>\n                    {Object.keys(profile.contacts).map(key => {\n                        return <div className={s.contact}>\n                            <b>{key}{createField(key, 'contacts.' + key, [], Input)} </b>\n                        </div>\n                    })}\n                </ul>\n            </div>\n        </div>\n        <div>\n            <button>Save</button>\n        </div>\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\n\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../assets/images/base-avatar.png';\nimport ProfileDataForm from './ProfileDataForm';\n\n\nconst ProfileInfo = ({profile, isOwner, savePhoto, saveProfile, status, updateStatus}) => {\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    }\n\n    return (\n        <div className={s.background}>\n            <div className={s.userAvatar}>\n                <img src={profile.photos.large || userPhoto} alt=\"Freddy\"></img>\n                {isOwner && <label>Add photo<input className={s.userAvatarAdd} type=\"file\" onChange={onMainPhotoSelected}/> </label>}\n                {isOwner && <div>\n                    <button onClick={() => {\n                        setEditMode(true)\n                    }}>Edit\n                    </button>\n                </div>}\n            </div>\n\n            {editMode ?\n                <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} isOwner={isOwner}/>\n                : <ProfileData status={status} updateStatus={updateStatus} profile={profile}/>}\n\n        </div>\n    )\n}\n\nconst ProfileData = ({profile, status, updateStatus}) => {\n    return <div className={s.profileData}>\n        <span className={s.userName}>{profile.fullName}</span>\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n\n        <div className={s.userInfo}>\n            <ul className={s.listInfo}>\n                <li>\n                    <b>Looking for a job: </b>{profile.lookingForAJob ? 'yes' : 'no'}\n                </li>\n                <li>\n                    {profile.lookingForAJob &&\n                    <div><b>My professional skills: </b> {profile.lookingForAJobDescription}</div>}\n                </li>\n                <li>\n                    <b>About me:</b> {profile.aboutMe}\n                </li>\n            </ul>\n        </div>\n        <div className={s.userContact}>{profile.website}\n            <ul className={s.profileInfoContacts}>\n                {Object.keys(profile.contacts).map(key => {\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n                })}\n            </ul>\n        </div>\n    </div>\n}\n\n\nexport const Contact = ({contactTitle, contactValue}) => {\n    return <li className={s.profileInfoContact}><b>{}</b>: {}</li>\n    // return <li className={s.profileInfoContact}><b>{contactTitle}</b>: {contactValue}</li>\n}\n\nexport default ProfileInfo;\n\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <li className={s.item}>\n            <div className={s.itemLike}>\n                <img src=\"https://lamcdn.net/furfurmag.ru/post-cover/PYMgsmfOiI0s9C3k8dwZ8Q-default.jpg\" alt=\"Аватарка Фредди\" />\n                <span className={s.like}>Like {props.like}</span>\n            </div>\n            <div className={s.itemPost}>\n                {props.message}\n            </div>\n            \n        </li>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo( props => {\n\n    let postsElements = [...props.posts].reverse().map(m => <Post key={props.id} message={m.message} like={m.likesCount} id={m.id} />)\n    let addNewPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddPostFormRadux onSubmit={addNewPost} />\n            <ul className={s.posts}>\n                {postsElements}\n            </ul>\n        </div>\n    );\n})\n    \n\nconst AddPostsForm = (props) => {\n    return (\n        <form className={s.postsBlockAdd} onSubmit={props.handleSubmit}>\n            <div className={s.postsBlock1}>\n                <Field component={Textarea}\n                    name='newPostText'\n                    placeholder='Hi, how are you sleep?'\n                    validate={[required, maxLength10]} />\n            </div>\n            <div className={s.postsBlock2}>\n                <button> Add post </button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostFormRadux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddPostsForm);\n\nexport default MyPosts;","import React from 'react';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText \n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\nconst Profile = (props) => {\n    return (\n        <main className={s.mainContent}>\n            <ProfileInfo savePhoto={props.savePhoto}\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n        </main>\n    )\n}\n\nexport default Profile;\n\n","import React from 'react';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                //Не самое лучшее решение, но по-быструхе можно так сделать\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n\n        return <Profile {...this.props}\n            isOwner={!this.props.match.params.userId}\n            profile={this.props.profile}\n            status={this.props.status}\n            updateStatus={this.props.updateStatus}\n            savePhoto={this.props.savePhoto} />\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps,\n        { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}