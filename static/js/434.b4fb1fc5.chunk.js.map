{"version":3,"file":"static/js/434.b4fb1fc5.chunk.js","mappings":"qIACA,SAAgB,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,yBAAyB,UAAY,2BAA2B,aAAe,+B,iCCK5J,MAAMA,EAAyCC,IAK/C,IALgD,GACrDC,EAAE,OACFC,EAAM,KACNC,EAAI,YACJC,GACDJ,EACC,OACEK,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,UAAWC,EAAEC,KAAMC,GAAI,aAAeT,EAAGU,UAChDC,EAAAA,EAAAA,MAAA,MAAIL,UAAWC,EAAEK,KAAKF,SAAA,EACpBN,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,IAAI,aAAaC,IAAKd,KAC9BU,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAES,QAAQN,SAAA,EACxBN,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAEU,UAAUP,SAAER,KAC9BE,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAEW,aAAaR,SAAEP,WAG7B,ECVd,MAcA,GAAegB,E,QAAAA,IAdyBC,IACtC,IAAIC,EAAUD,EAAME,QAAQC,KAAKC,IAC/BpB,EAAAA,EAAAA,KAACN,EAAW,CAEVE,GAAIwB,EAAExB,GACNE,KAAMsB,EAAEtB,KACRC,YAAaqB,EAAErB,YACfF,OAAQuB,EAAEvB,QAJLuB,EAAExB,MAQX,OAAOI,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAEkB,KAAKf,SAAEW,GAAa,ICX9C,MAOA,GAAeK,E,QAAAA,KAPUC,IAChB,CACLL,QAASK,EAAMC,YAAYN,QAC3BO,OAAQF,EAAMG,KAAKC,SAASF,UAM9B,KAFF,CAIEG,E,2ECbF,MAMMC,GAAYP,EAAAA,EAAAA,KANOC,IAChB,CACLE,OAAQF,EAAMG,KAAKC,SAASF,WAMzB,SAASV,EACde,GAUA,OAAOD,GAPLb,IAEA,MAAM,OAAES,KAAWM,GAAcf,EACjC,OAAKS,GACEzB,EAAAA,EAAAA,KAAC8B,EAAS,IAAMd,KADHhB,EAAAA,EAAAA,KAACgC,EAAAA,GAAQ,CAAC3B,GAAI,UACuC,GAI7E,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.sass?c081","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Dialogs_list__U5H4G\",\"item\":\"Dialogs_item__0ORjO\",\"message\":\"Dialogs_message__E6CSY\",\"user_name\":\"Dialogs_user_name__71Yl9\",\"last_message\":\"Dialogs_last_message__Wtc4O\"};","import { NavLink } from 'react-router-dom';\r\nimport s from '../Dialogs.module.sass';\r\nimport React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { DialogsItemType } from '../../../types/types';\r\n\r\nexport const DialogsItem: React.FC<DialogsItemType> = ({\r\n  id,\r\n  avatar,\r\n  name,\r\n  lastMessage,\r\n}) => {\r\n  return (\r\n    <NavLink className={s.link} to={'/messages/' + id}>\r\n      <li className={s.item}>\r\n        <Avatar alt=\"Remy Sharp\" src={avatar} />\r\n        <div className={s.message}>\r\n          <div className={s.user_name}>{name}</div>\r\n          <div className={s.last_message}>{lastMessage}</div>\r\n        </div>\r\n      </li>\r\n    </NavLink>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './Dialogs.module.sass';\r\nimport { DialogsItem } from './DialogsItem/DialogsItem';\r\nimport { DialogsItemType } from '../../types/types';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\ntype DialogsType = {\r\n  dialogs: Array<DialogsItemType>;\r\n  isAuth: boolean | null;\r\n};\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n  let newData = props.dialogs.map((d) => (\r\n    <DialogsItem\r\n      key={d.id}\r\n      id={d.id}\r\n      name={d.name}\r\n      lastMessage={d.lastMessage}\r\n      avatar={d.avatar}\r\n    />\r\n  ));\r\n\r\n  return <ul className={s.list}>{newData}</ul>;\r\n};\r\n\r\nexport default withAuthRedirect(Dialogs);\r\n","import React from 'react';\r\nimport { RootState } from '../../redux/redux-store';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { DialogsItemType } from '../../types/types';\r\n\r\ntype mapStateToPropsType = {\r\n  dialogs: Array<DialogsItemType>;\r\n  isAuth: boolean | null;\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): mapStateToPropsType => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    isAuth: state.auth.userData.isAuth,\r\n  };\r\n};\r\n\r\nexport default connect<mapStateToPropsType, null, {}, RootState>(\r\n  mapStateToProps,\r\n  null\r\n  //@ts-ignore\r\n)(Dialogs);\r\n","import React, { ComponentType } from 'react';\r\nimport { RootState } from '../redux/redux-store';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean | null;\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n  return {\r\n    isAuth: state.auth.userData.isAuth,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport function withAuthRedirect<T>(\r\n  Component: ComponentType<T & ConnectedProps<typeof connector>>\r\n) {\r\n  const RedirectComponent: React.FC<T & ConnectedProps<typeof connector>> = (\r\n    props\r\n  ) => {\r\n    const { isAuth, ...restProps } = props;\r\n    if (!isAuth) return <Redirect to={'/login'} />;\r\n    return <Component {...(props as T & ConnectedProps<typeof connector>)} />;\r\n  };\r\n  //@ts-ignore\r\n  return connector(RedirectComponent);\r\n}\r\n"],"names":["DialogsItem","_ref","id","avatar","name","lastMessage","_jsx","NavLink","className","s","link","to","children","_jsxs","item","Avatar","alt","src","message","user_name","last_message","withAuthRedirect","props","newData","dialogs","map","d","list","connect","state","dialogsPage","isAuth","auth","userData","Dialogs","connector","Component","restProps","Redirect"],"sourceRoot":""}