{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","api/api.js","assets/images/base-avatar.png","assets/images/preloader.svg","components/Users/Users.module.css","components/Navbar/Friends/Friends.module.css","serviceWorker.js","redux/sidebar-reducer.js","utils/validators/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Setting/Setting.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/HeaderContainer.jsx","components/Login/login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","redux/profile-reducer.js"],"names":["module","exports","initialState","messages","message","id","dialogs","name","photo","sendMessageActionCreator","newMessageText","type","dialogsReducer","state","action","newMessage","instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalItemsCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toogleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totaItemsCount","count","filter","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","Header","props","className","s","header","logo","header_search","header_search_button","loginBlock","onClick","to","Navbar","nav","navbar_mobile","menu_mobile","list","item","activeClassName","activeLink","News","Music","Setting","Paginator","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","number","cn","selectedPage","pageNumber","key","User","user","usersInfo","usersAvatar","src","photos","small","userPhoto","alt","width","usersFollow","disabled","some","userInfo","userStatus","userName","userStatusText","userLocation","country","city","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","connect","bind","page","totalCount","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","formSummaryError","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","preloaderImg","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.a500043e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"list\":\"Navbar_list__2GzPV\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"navbar_mobile\":\"Navbar_navbar_mobile__3i9go\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\n\n\nlet initialState = {\n    messages: [\n        { message: 'Hi', id: 1 },\n        { message: 'How are u', id: 2 },\n        { message: 'You', id: 3 }\n    ],\n\n    dialogs: [\n        { name: 'Freddy', id: 1, photo: 'https://lamcdn.net/furfurmag.ru/post-cover/PYMgsmfOiI0s9C3k8dwZ8Q-default.jpg' },\n        { name: 'Nancy', id: 2, photo: 'https://cs8.pikabu.ru/post_img/2016/02/16/6/1455614024134387187.jpg' },\n        { name: 'Glen', id: 3, photo: 'https://avatars.mds.yandex.net/get-zen_doc/1866022/pub_5db7caed1e8e3f00ac32a293_5db7ddb498930900b236e7d6/scale_1200' }\n    ]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SEND_MESSAGE:\n            let newMessage = action.newMessageText;\n            return {\n                ...state,\n                messages: [...state.messages, { message: newMessage, id: 4 }],\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport const sendMessageActionCreator = (newMessageText) => ({ type: SEND_MESSAGE, newMessageText})\n\nexport default dialogsReducer;","import Axios from \"axios\";\n\nconst instance = Axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"17ff73e8-0597-4fec-9a60-f80cbf4609a3\"\n    }\n\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`);\n\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`);\n    },\n\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/base-avatar.46cc5c93.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3a658c63.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersInfo\":\"Users_usersInfo__3m434\",\"usersAvatar\":\"Users_usersAvatar__VO2SS\",\"photo\":\"Users_photo__2hOPg\",\"userInfo\":\"Users_userInfo__21fTd\",\"userStatus\":\"Users_userStatus__3dsIO\",\"userStatusText\":\"Users_userStatusText__biDMU\",\"userLocation\":\"Users_userLocation__2sqGN\",\"userName\":\"Users_userName__1mt5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Friends_nav__34e08\",\"item\":\"Friends_item__13jWM\",\"activeLink\":\"Friends_activeLink__2dT3A\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n\n}\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n   return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return { ...u, ...newObjProps }\n        }\n        return u;\n    })\n} ","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalItemsCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage }\n        }\n\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totaItemsCount: action.count }\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toogleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setUsersTotalCount(data.totalCount));\n        dispatch(setCurrentPage(page));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toogleFollowingProgress(true, userId));\n\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toogleFollowingProgress(false, userId));\n}\n\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }    \n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } });\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let { id, login, email } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe)\n\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', { _error: message }));\n    }\n\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\n\n\nexport default authReducer;","import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  ));\n\n// let store = createStore(reducers ,applyMiddleware(thunkMiddleware));\n\nwindow._store_ = store;\n\nexport default store; \n","import React from 'react';\nimport s from './Header.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { Field } from 'redux-form';\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <div className={s.logo}>Kruegerbook</div>\n            {/* <div className={s.imgLogo}></div> */}\n            <div className={s.header_search}>\n                {/* Временная заглушка */}\n                <input type=\"search\" name='search'/> \n                <button className={s.header_search_button}>Search</button>\n            </div>\n            <div>\n                {props.isAuth\n                    ?\n                    <div className={s.loginBlock}>{props.login}\n                        <button onClick={props.logout}> Log out </button>\n                    </div>\n                    :\n                    <NavLink to={'/login'}> Login </NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\nimport Friends from './Friends/Friends';\n\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.navbar_mobile}>\n               <span className={s.menu_mobile}>Menu</span> \n            </div>\n            <ul className={s.list}>\n                <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink></li>\n                <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink></li>\n                <li className={s.item}><NavLink to=\"news\" activeClassName={s.activeLink}>News</NavLink></li>\n                <li className={s.item}><NavLink to=\"music\" activeClassName={s.activeLink}>Music</NavLink></li>\n                <li className={s.item}><NavLink to=\"setting\" activeClassName={s.activeLink}>Settings</NavLink></li>\n                <li className={s.item}><NavLink to=\"users\" activeClassName={s.activeLink}>Users</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            Newsjjkjk\n        </div>\n    )\n}\n\n\nexport default News;\n","import React from 'react';\nimport s from './Music.module.css';\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\n\nexport default Music;\n","import React from 'react';\nimport s from './Setting.module.css';\n\nconst Setting = (props) => {\n    return (\n        <div>\n            Setting\n        </div>\n    )\n}\n\n\nexport default Setting;\n","import React, { useState } from 'react';\nimport s from './Paginator.module.css';\nimport cn from \"classnames\";\n\n\nlet Paginator = ({ totaItemsCount, pageSize, currentPage, onPageChange, portionSize = 10 }) => {\n    let pagesCount = Math.ceil(totaItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div className={s.paginator}>\n            {portionNumber > 0 &&\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\n            }\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <div className={s.number}>\n                        <span className={cn({\n                            [s.selectedPage]: currentPage === p\n                        }, s.pageNumber)}\n                            key={p}\n                            onClick={(p) => {\n                                onPageChange(p);\n                            }}>{p}</span>\n                    </div>\n                })}\n            { portionCount > portionNumber &&\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\n\n        </div>)\n}\n\nexport default Paginator;","import React from 'react';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/images/base-avatar.png';\nimport { NavLink } from 'react-router-dom';\n\n\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\n    return (\n        <div>\n            <div className={s.usersInfo} key={user.id}>\n                <div className={s.usersAvatar}>\n                    <div>\n                        <NavLink to={'/profile/' + user.id}>\n                            <img className={s.photo} src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"Аватар\" width=\"110px\" />\n                        </NavLink>\n                    </div>\n                    <div className={s.usersFollow}>\n                        {user.followed\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    unfollow(user.id);\n\n                                }}>Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    follow(user.id);\n\n                                }}>Follow</button>\n                        }\n                    </div>\n                </div>\n                <div className={s.userInfo}>\n                    <div className={s.userStatus}>\n                        <div className={s.userName}>{user.name}</div>\n                        <div className={s.userStatusText}>{user.status}</div>\n                    </div>\n                    <div className={s.userLocation}>\n                        <div>{user.country}</div>\n                        <div>{user.city}</div>\n                    </div>\n                </div>\n\n            </div>\n\n\n        </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\n\nlet Users = ({ currentPage, onPageChange, totaItemsCount, pageSize, users, ...props }) => {\n\n    return (\n        <div>\n            <div>\n                {\n                    users.map(u => <User user={u}\n                        key={u.id}\n                        followingInProgress={props.followingInProgress}\n                        follow={props.follow}\n                        unfollow={props.unfollow} />\n                    )\n                }\n            </div>\n            <Paginator currentPage={currentPage} onPageChange={onPageChange} totaItemsCount={totaItemsCount} pageSize={pageSize} />\n        </div>\n\n    )\n}\nexport default Users;","import { createSelector } from \"reselect\";\n\nexport const getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totaItemsCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, toogleFollowingProgress, requestUsers } from \"../../redux/users-reducer\";\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getPageSize, totaItemsCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsers, getTotalUsersCount } from '../../redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize);\n    }\n\n    onPageChange = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize);\n    }\n\n    render() {\n        return <>\n\n            {this.props.isFetching ? <Preloader /> : null}\n\n            <Users totaItemsCount={this.props.totaItemsCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChange={this.onPageChange}\n                users={this.props.users}\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totaItemsCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toogleFollowingProgress,\n        requestUsers\n    })\n)(UsersContainer);","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/auth-reducer';\n\n\nclass HeaderContainer extends React.Component {\n       \n        render() {\n            return <Header {...this.props} />\n        }\n\n    }\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\nimport s from './../common/FormsControls/FormsControls.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return <div>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={'Email'}\n                    name={'email'}\n                    component={Input}\n                    validate={[required]} />\n            </div>\n            <div>\n                <Field placeholder={'Password'}\n                    type={'password'}\n                    name={'password'}\n                    component={Input}\n                    validate={[required]} />\n            </div>\n            <div>\n                <Field type=\"checkbox\"\n                    name={'rememberMe'}\n                    component={Input} />\n                Запомнить меня\n            </div>\n            {error && <div className={s.formSummaryError}> { error } </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    </div>\n}\n\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);","import React, { Suspense } from 'react';\nimport Preloader from './../components/common/Preloader/Preloader';\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<Preloader />}>\n            <Component {...props} />\n        </Suspense>\n    }\n\n}\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { withSuspense } from './hoc/withSuspense';\n\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\n//В bandle не попадает до запроса (только по необходимости).\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <Suspense fallback={<Preloader />}>\n        <div className='app-wrapper-content'>\n          <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n          <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/music\" component={Music} />\n          <Route path=\"/setting\" component={Setting} />\n          <Route path=\"/login\" component={() => <Login />} />\n        </div>\n        </Suspense>\n      </div >\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nlet MainApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport MainApp from './App';\n\nReactDOM.render( <MainApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport preloader from '../../../assets/images/preloader.svg';\nimport s from './Preloader.module.css';\n\nlet Preloader = (props) => {\n    return <div className={s.preloader}>\n        <img className={s.preloaderImg} src={preloader} />\n    </div>\n}\n\nexport default Preloader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"logo\":\"Header_logo__3_SJs\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"imgLogo\":\"Header_imgLogo__3176M\",\"mobileMenu\":\"Header_mobileMenu__2DN1E\",\"header_search\":\"Header_header_search__XGF0O\"};","import React from 'react';\nimport s from './FormsControls.module.css';\n\nexport const FormControl = ({ input, meta: {touched, error},children }) => {\n\n    const hasError = touched && error;\n    return (\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"number\":\"Paginator_number__2m6BL\"};","export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n}\n\n","import { usersAPI, profileAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you sleep?', likesCount: 20 },\n        { id: 2, message: 'I like the night!', likesCount: 15 }\n    ],\n\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => !action.postId)\n            }\n        }\n\n        case SET_USER_PROFILE:\n\n            return {\n                ...state,\n                profile: action.profile\n            }\n\n        case SET_STATUS:\n\n            return {\n                ...state,\n                status: action.status\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\n\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\n\nexport default profileReducer;"],"sourceRoot":""}