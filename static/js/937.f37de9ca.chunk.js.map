{"version":3,"file":"static/js/937.f37de9ca.chunk.js","mappings":"2IACA,QAA4B,4B,uBCU5B,MAQMA,EAAiBA,KACrB,MAAOC,EAAIC,IAASC,EAAAA,EAAAA,UAA2B,MA0B/C,OAxBAC,EAAAA,EAAAA,YAAU,KACR,IAAIH,EACJ,MAAMI,EAAeA,KACnBC,WAAWC,EAAe,IAAK,EAGjC,SAASA,IAAiB,IAADC,EAAAC,EAAAC,EACrB,QAAFF,EAAAP,SAAE,IAAAO,GAAFA,EAAIG,oBAAoB,QAASN,GAC/B,QAAFI,EAAAR,SAAE,IAAAQ,GAAFA,EAAIG,QACJX,EAAK,IAAIY,UACP,gEAEA,QAAFH,EAAAT,SAAE,IAAAS,GAAFA,EAAII,iBAAiB,QAAST,GAC9BH,EAAMD,EACR,CAIA,OAFAM,IAEO,KACLN,EAAGU,oBAAoB,QAASN,GAChCJ,EAAGW,OAAO,CACX,GACA,KAGDG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAY,CAACjB,GAAIA,KAClBgB,EAAAA,EAAAA,KAACE,EAAkB,CAAClB,GAAIA,MACpB,EAIJiB,EAAmDE,IAAa,IAAZ,GAAEnB,GAAImB,EAC9D,MAAOC,EAAUC,IAAenB,EAAAA,EAAAA,UAA4B,IAc5D,OAZAC,EAAAA,EAAAA,YAAU,KACR,MAAMmB,EAAkBC,IACtB,IAAIC,EAAaC,KAAKC,MAAMH,EAAEI,MAC9BN,GAAaO,GAAiB,IAAIA,KAAiBJ,IAAY,EAGjE,OADE,OAAFxB,QAAE,IAAFA,GAAAA,EAAIa,iBAAiB,UAAWS,GACzB,KACH,OAAFtB,QAAE,IAAFA,GAAAA,EAAIU,oBAAoB,UAAWY,EAAe,CACnD,GACA,CAACtB,KAIFgB,EAAAA,EAAAA,KAAA,OAAKa,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAAShB,SAChDK,EAASY,KAAI,CAACC,EAAQC,KACrBlB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmB,EAAO,CAACC,QAASH,KADVC,MAIR,EAIJC,EAAkDE,IAAkB,IAAjB,QAAED,GAASC,EAElE,OACEvB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKsB,IAAKF,EAAQG,MAAOC,IAAI,MAC7BxB,EAAAA,EAAAA,KAAA,KAAAD,SAAIqB,EAAQK,YACZzB,EAAAA,EAAAA,KAAA,SACCoB,EAAQA,SACTpB,EAAAA,EAAAA,KAAA,WACI,EAIJE,EAAyDwB,IAAa,IAAZ,GAAE1C,GAAI0C,EACpE,MAAON,EAASO,IAAczC,EAAAA,EAAAA,UAAS,KAChC0C,EAAaC,IAAkB3C,EAAAA,EAAAA,UACpC,YAGFC,EAAAA,EAAAA,YAAU,KACR,IAAI2C,EAAgBA,KAClBD,EAAe,QAAQ,EAGzB,OADE,OAAF7C,QAAE,IAAFA,GAAAA,EAAIa,iBAAiB,OAAQiC,GACtB,KACH,OAAF9C,QAAE,IAAFA,GAAAA,EAAIU,oBAAoB,OAAQoC,EAAc,CAC/C,GACA,CAAC9C,IAQJ,OACEc,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,YACE+B,SAAWxB,GAAMoB,EAAWpB,EAAEyB,cAAcC,OAC5CA,MAAOb,OAGXpB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,UAAWnD,GAAsB,UAAhB4C,EAAyBQ,QAhBpCC,KACbjB,IAGH,OAAFpC,QAAE,IAAFA,GAAAA,EAAIsD,KAAKlB,GACTO,EAAW,IAAG,EAW6D5B,SAAC,aAItE,EAIV,EAzH2BwC,KAEvBvC,EAAAA,EAAAA,KAAA,OAAKwC,UAAWC,EAAY1C,UAC1BC,EAAAA,EAAAA,KAACjB,EAAI,K","sources":["webpack://my-app/./src/pages/Chat/ChatPage.module.css?29d9","pages/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat_page\":\"ChatPage_chat_page__eh6GC\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ChatPage.module.css';\r\nimport { Button } from '../../components/common/Button/Button';\r\n\r\nexport type ChatMessageType = {\r\n  message: string;\r\n  photo: string;\r\n  userId: number;\r\n  userName: string;\r\n};\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return (\r\n    <div className={s.chat_page}>\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const [ws, setWs] = useState<WebSocket | null>(null);\r\n\r\n  useEffect(() => {\r\n    let ws: WebSocket;\r\n    const closeHandler = () => {\r\n      setTimeout(createChannel, 3000);\r\n    };\r\n\r\n    function createChannel() {\r\n      ws?.removeEventListener('close', closeHandler);\r\n      ws?.close();\r\n      ws = new WebSocket(\r\n        'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\r\n      );\r\n      ws?.addEventListener('close', closeHandler);\r\n      setWs(ws);\r\n    }\r\n\r\n    createChannel();\r\n\r\n    return () => {\r\n      ws.removeEventListener('close', closeHandler);\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MessagesChat ws={ws} />\r\n      <AddMessageChatForm ws={ws} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessagesChat: React.FC<{ ws: WebSocket | null }> = ({ ws }) => {\r\n  const [messages, setMessages] = useState<ChatMessageType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const messageHandler = (e: MessageEvent) => {\r\n      let newMessage = JSON.parse(e.data);\r\n      setMessages((prevMessages) => [...prevMessages, ...newMessage]);\r\n    };\r\n    ws?.addEventListener('message', messageHandler);\r\n    return () => {\r\n      ws?.removeEventListener('message', messageHandler);\r\n    };\r\n  }, [ws]);\r\n\r\n  //const messages = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\r\n  return (\r\n    <div style={{ height: '400px', overflowY: 'auto' }}>\r\n      {messages.map((m: any, key: number) => (\r\n        <div key={key}>\r\n          <Message message={m} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({ message }) => {\r\n  //const message: ChatMessageType = null;\r\n  return (\r\n    <div>\r\n      <img src={message.photo} alt=\"\" />\r\n      <b>{message.userName}</b>\r\n      <br />\r\n      {message.message}\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageChatForm: React.FC<{ ws: WebSocket | null }> = ({ ws }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>(\r\n    'pending'\r\n  );\r\n\r\n  useEffect(() => {\r\n    let onOpenHandler = () => {\r\n      setReadyStatus('ready');\r\n    };\r\n    ws?.addEventListener('open', onOpenHandler);\r\n    return () => {\r\n      ws?.removeEventListener('open', onOpenHandler);\r\n    };\r\n  }, [ws]);\r\n  const sendMessage = () => {\r\n    if (!message) {\r\n      return;\r\n    }\r\n    ws?.send(message);\r\n    setMessage('');\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <textarea\r\n          onChange={(e) => setMessage(e.currentTarget.value)}\r\n          value={message}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button disabled={!ws || readyStatus !== 'ready'} onClick={sendMessage}>\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"names":["Chat","ws","setWs","useState","useEffect","closeHandler","setTimeout","createChannel","_ws","_ws2","_ws3","removeEventListener","close","WebSocket","addEventListener","_jsxs","children","_jsx","MessagesChat","AddMessageChatForm","_ref","messages","setMessages","messageHandler","e","newMessage","JSON","parse","data","prevMessages","style","height","overflowY","map","m","key","Message","message","_ref2","src","photo","alt","userName","_ref3","setMessage","readyStatus","setReadyStatus","onOpenHandler","onChange","currentTarget","value","Button","disabled","onClick","sendMessage","send","ChatPage","className","s"],"sourceRoot":""}