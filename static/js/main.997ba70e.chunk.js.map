{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.css","assets/images/base-avatar.png","redux/dialogs-reducer.js","assets/images/preloader.svg","components/Navbar/Friends/Friends.module.css","components/Users/Users.module.css","serviceWorker.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Setting/Setting.jsx","utils/validators/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","redux/profile-reducer.js"],"names":["instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","initialState","messages","message","id","dialogs","name","photo","sendMessageActionCreator","newMessageText","type","dialogsReducer","state","action","newMessage","Boolean","window","location","hostname","match","Header","props","className","s","header","logo","header_search","header_search_button","isAuth","loginBlock","onClick","to","Navbar","nav","navbar_mobile","menu_mobile","list","item","activeClassName","activeLink","News","Music","Setting","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalItemsCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toogleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","number","classNames","selectedPage","pageNumber","key","User","user","usersInfo","usersAvatar","src","photos","small","userPhoto","alt","width","usersFollow","disabled","some","userInfo","userStatus","userName","userStatusText","userLocation","country","city","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","createField","formSummaryError","length","stopSubmit","_error","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandleErrors","promiseRejactionEvent","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","validators","text","preloader","preloaderImg","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.997ba70e.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nconst instance = Axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"17ff73e8-0597-4fec-9a60-f80cbf4609a3\"\n    }\n\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`);\n\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`);\n    },\n\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile);\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n\n    saveProfile(profile) {\n        return instance.put(`profile`, profile);\n\n    }\n}\n\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n\n    login(email, password, rememberMe = false, captcha=null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"list\":\"Navbar_list__2GzPV\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"navbar_mobile\":\"Navbar_navbar_mobile__3i9go\"};","module.exports = __webpack_public_path__ + \"static/media/base-avatar.46cc5c93.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\n\n\nlet initialState = {\n    messages: [\n        { message: 'Hi', id: 1 },\n        { message: 'How are u', id: 2 },\n        { message: 'You', id: 3 }\n    ],\n\n    dialogs: [\n        { name: 'Freddy', id: 1, photo: 'https://lamcdn.net/furfurmag.ru/post-cover/PYMgsmfOiI0s9C3k8dwZ8Q-default.jpg' },\n        { name: 'Nancy', id: 2, photo: 'https://cs8.pikabu.ru/post_img/2016/02/16/6/1455614024134387187.jpg' },\n        { name: 'Glen', id: 3, photo: 'https://avatars.mds.yandex.net/get-zen_doc/1866022/pub_5db7caed1e8e3f00ac32a293_5db7ddb498930900b236e7d6/scale_1200' }\n    ]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SEND_MESSAGE:\n            let newMessage = action.newMessageText;\n            return {\n                ...state,\n                messages: [...state.messages, { message: newMessage, id: 4 }],\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport const sendMessageActionCreator = (newMessageText) => ({ type: SEND_MESSAGE, newMessageText})\n\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.3a658c63.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Friends_nav__34e08\",\"item\":\"Friends_item__13jWM\",\"activeLink\":\"Friends_activeLink__2dT3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersInfo\":\"Users_usersInfo__3m434\",\"usersAvatar\":\"Users_usersAvatar__VO2SS\",\"photo\":\"Users_photo__2hOPg\",\"userInfo\":\"Users_userInfo__21fTd\",\"userStatus\":\"Users_userStatus__3dsIO\",\"userStatusText\":\"Users_userStatusText__biDMU\",\"userLocation\":\"Users_userLocation__2sqGN\",\"userName\":\"Users_userName__1mt5V\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport s from './Header.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { Field } from 'redux-form';\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <div className={s.logo}>Kruegerbook</div>\n            {/* <div className={s.imgLogo}></div> */}\n            <div className={s.header_search}>\n                {/* Временная заглушка */}\n                <input type=\"search\" name='search'/> \n                <button className={s.header_search_button}>Search</button>\n            </div>\n            <div>\n                {props.isAuth\n                    ?\n                    <div className={s.loginBlock}>{props.login}\n                        <button onClick={props.logout}> Log out </button>\n                    </div>\n                    :\n                    <NavLink to={'/login'}> Login </NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\nimport Friends from './Friends/Friends';\n\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.navbar_mobile}>\n               <span className={s.menu_mobile}>Menu</span> \n            </div>\n            <ul className={s.list}>\n                <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink></li>\n                <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink></li>\n                <li className={s.item}><NavLink to=\"news\" activeClassName={s.activeLink}>News</NavLink></li>\n                <li className={s.item}><NavLink to=\"music\" activeClassName={s.activeLink}>Music</NavLink></li>\n                <li className={s.item}><NavLink to=\"setting\" activeClassName={s.activeLink}>Settings</NavLink></li>\n                <li className={s.item}><NavLink to=\"users\" activeClassName={s.activeLink}>Users</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            Newsjjkjk\n        </div>\n    )\n}\n\n\nexport default News;\n","import React from 'react';\nimport s from './Music.module.css';\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\n\nexport default Music;\n","import React from 'react';\nimport s from './Setting.module.css';\n\nconst Setting = (props) => {\n    return (\n        <div>\n            Setting\n        </div>\n    )\n}\n\n\nexport default Setting;\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n   return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return { ...u, ...newObjProps }\n        }\n        return u;\n    })\n} ","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 100,\n    totalItemsCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage }\n        }\n\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalItemsCount: action.count }\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setUsersTotalCount = (totalItemsCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalItemsCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toogleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\n\nexport const requestUsers = (page, pageSize) => {\n  \n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setUsersTotalCount(data.totalCount));\n        dispatch(setCurrentPage(page));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toogleFollowingProgress(true, userId));\n\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toogleFollowingProgress(false, userId));\n}\n\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }    \n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, { useState } from 'react';\nimport s from './Paginator.module.css';\nimport classNames from \"classnames\";\n\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChange, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div className={s.paginator}>\n            {portionNumber > 0 &&\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\n            }\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <div className={s.number}>\n                        <span className={classNames({\n                            [s.selectedPage]: currentPage === p\n                        }, s.pageNumber)}\n                            key={p}\n                            onClick={() => {\n                                onPageChange(p);\n                            }}>{p}</span>\n                    </div>\n                })}\n            { portionCount > portionNumber &&\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\n\n        </div>)\n}\n\nexport default Paginator;","import React from 'react';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/images/base-avatar.png';\nimport { NavLink } from 'react-router-dom';\n\n\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\n    return (\n        <div>\n            <div className={s.usersInfo} key={user.id}>\n                <div className={s.usersAvatar}>\n                    <div>\n                        <NavLink to={'/profile/' + user.id}>\n                            <img className={s.photo} src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"Аватар\" width=\"110px\" />\n                        </NavLink>\n                    </div>\n                    <div className={s.usersFollow}>\n                        {user.followed\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    unfollow(user.id);\n\n                                }}>Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    follow(user.id);\n\n                                }}>Follow</button>\n                        }\n                    </div>\n                </div>\n                <div className={s.userInfo}>\n                    <div className={s.userStatus}>\n                        <div className={s.userName}>{user.name}</div>\n                        <div className={s.userStatusText}>{user.status}</div>\n                    </div>\n                    <div className={s.userLocation}>\n                        <div>{user.country}</div>\n                        <div>{user.city}</div>\n                    </div>\n                </div>\n\n            </div>\n\n\n        </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\n\nlet Users = ({ currentPage, onPageChange, totalItemsCount, pageSize, users, ...props }) => {\n\n    return (\n        <div>\n            <Paginator currentPage={currentPage} onPageChange={onPageChange} totalItemsCount={totalItemsCount} pageSize={pageSize} />\n            <div>\n                {\n                    users.map(u => <User user={u}\n                        key={u.id}\n                        followingInProgress={props.followingInProgress}\n                        follow={props.follow}\n                        unfollow={props.unfollow} />\n                    )\n                }\n            </div>\n            <Paginator currentPage={currentPage} onPageChange={onPageChange} totalItemsCount={totalItemsCount} pageSize={pageSize} />\n\n        </div>\n\n    )\n}\nexport default Users;","import { createSelector } from \"reselect\";\n\nexport const getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalItemsCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, toogleFollowingProgress, requestUsers} from \"../../redux/users-reducer\";\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getPageSize, getCurrentPage, getIsFetching, getFollowingInProgress, getUsers, getTotalUsersCount } from '../../redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const { currentPage, pageSize } = this.props;\n        this.props.requestUsers(currentPage, pageSize);\n    }\n\n    onPageChange = (pageNumber) => {\n        const { pageSize } = this.props;\n        this.props.requestUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n\n            {this.props.isFetching ? <Preloader /> : null}\n\n            <Users totalItemsCount={this.props.totalItemsCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChange={this.onPageChange}\n                users={this.props.users}\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalItemsCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toogleFollowingProgress,\n        requestUsers\n    })\n)(UsersContainer);","import { authAPI, securityAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null   //if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS: {\n\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } });\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } });\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let { id, login, email } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.data.resultCode === 0) {\n        //succes, get auth data\n        dispatch(getAuthUserData());\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', { _error: message }));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\n\nexport default authReducer;","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/auth-reducer';\n\n\nclass HeaderContainer extends React.Component {\n       \n        render() {\n            return <Header {...this.props} />\n        }\n\n    }\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\nimport s from './../common/FormsControls/FormsControls.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { createField, Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\n\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n    return <div>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={'Email'}\n                    name={'email'}\n                    component={Input}\n                    validate={[required]} />\n            </div>\n            <div>\n                <Field placeholder={'Password'}\n                    type={'password'}\n                    name={'password'}\n                    component={Input}\n                    validate={[required]} />\n            </div>\n            <div>\n                <Field type=\"checkbox\"\n                    name={'rememberMe'}\n                    component={Input} />\n                Запомнить меня\n            </div>\n\n            {captchaUrl && <img src={captchaUrl} />}\n            {captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {})}\n\n            {error && <div className={s.formSummaryError}> {error} </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    </div>\n}\n\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);","import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false,\n    globalError: null\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {\n\n}\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  ));\n\n// let store = createStore(reducers ,applyMiddleware(thunkMiddleware));\n\nwindow._store_ = store;\n\nexport default store; \n","import React, { Suspense } from 'react';\nimport Preloader from './../components/common/Preloader/Preloader';\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<Preloader />}>\n            <Component {...props} />\n        </Suspense>\n    }\n\n}\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport { BrowserRouter, Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { withSuspense } from './hoc/withSuspense';\n\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\n//В bandle не попадает до запроса (только по необходимости).\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n  catchAllUnhandleErrors = (promiseRejactionEvent) => {\n    \n    //console.error(promiseRejactionEvent);\n  }\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener('unhandlerejection', this.catchAllUnhandleErrors);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('unhandlerejection', this.catchAllUnhandleErrors);\n  }\n\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <Suspense fallback={<Preloader />}>\n          <div className='app-wrapper-content'>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to={'/profile'}/>} />\n              <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n              <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)} />\n              <Route path=\"/users\" render={() => <UsersContainer />} />\n              <Route path=\"/news\" component={News} />\n              <Route path=\"/music\" component={Music} />\n              <Route path=\"/setting\" component={Setting} />\n              <Route path=\"/login\" component={() => <Login />} />\n              <Route path=\"*\" render={() => <div>404 NOT FOUND</div>} />\n            </Switch>\n          </div>\n        </Suspense>\n      </div >\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nlet MainApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\n import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\nReactDOM.render( <MainApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport s from './FormsControls.module.css';\n\nexport const FormControl = ({ input, meta: { touched, error }, children }) => {\n\n    const hasError = touched && error;\n    return (\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\n    return <div>\n        <Field placeholder={placeholder}\n            name={name}\n            validate={validators}\n            component={component}\n            {...props}\n        /> {text}\n    </div>\n}\n\n","import React from 'react';\nimport preloader from '../../../assets/images/preloader.svg';\nimport s from './Preloader.module.css';\n\nlet Preloader = (props) => {\n    return <div className={s.preloader}>\n        <img className={s.preloaderImg} src={preloader} />\n    </div>\n}\n\nexport default Preloader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"logo\":\"Header_logo__3_SJs\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"imgLogo\":\"Header_imgLogo__3176M\",\"mobileMenu\":\"Header_mobileMenu__2DN1E\",\"header_search\":\"Header_header_search__XGF0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"number\":\"Paginator_number__2m6BL\"};","export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n}\n\n","import { stopSubmit } from \"redux-form\";\nimport { usersAPI, profileAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nconst SAVE_PROFILE_SUCCESS = 'SAVE_PROFILE_SUCCESS';\n\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you sleep?', likesCount: 20 },\n        { id: 2, message: 'I like the night!', likesCount: 15 }\n    ],\n\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => !action.postId)\n            }\n        }\n\n        case SET_USER_PROFILE:\n\n            return {\n                ...state,\n                profile: action.profile\n            }\n\n        case SET_STATUS:\n\n            return {\n                ...state,\n                status: action.status\n            }\n\n        case SAVE_PHOTO_SUCCESS:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\nexport const saveProfileSuccess = (profile) => ({ type: SAVE_PROFILE_SUCCESS, profile})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    try{\n        let response = await profileAPI.updateStatus(status)\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    } catch(error) {\n        //dispatch saga\n    }\n    \n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit('edit-profile', { _error: response.data.messages[0] }));\n        return Promise.reject(response.data.messages[0]);\n    }\n}\n\n\nexport default profileReducer;"],"sourceRoot":""}